{
  "Name": "4.cargaUsuarios",
  "CreationDate": "2025-6-24",
  "Commands": [
    {
      "Command": "comment",
      "Target": "Esta macro cadastra Usu√°rios no SIP a partir de um arquivo CSV. INSTRU√á√ïES:",
      "Value": "Execute a Macro (Play Macro) a partir do sistema SIP > Menu \"Usu√°rios\" > \"Listar\".",
      "Description": "Como ser√° criada uma array, os valores de linha e coluna come√ßam em [0] e [0]. Recomenda√ß√£o: no log, exibir a op√ß√£o \"Echo & Status\"."
    },
    {
      "Command": "csvReadArray",
      "Target": "exemploUsuarios.csv",
      "Value": "usuarios",
      "Description": "Este primeiro comando l√™ os dados do arquivo CSV e os salva em uma estrutura interna da macro. Consulte a documenta√ß√£o de refer√™ncia para instru√ß√µes quanto √† montagem do arquivo CSV."
    },
    {
      "Command": "store",
      "Target": "1",
      "Value": "i",
      "Description": "IMPORTANTE: Este comando indica A PARTIR DE QUAL LINHA do arquivo de refer√™ncia a macro vai ser executada (e, dela, vai at√© o final) Se necess√°rio retomar a execu√ß√£o a partir de um erro, altere este valor para a linha da qual pretende retomar."
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "return Number(${usuarios}.length) - 1;",
      "Value": "totalLinhas",
      "Description": "Este comando obt√©m a quantidade de linhas da lista que foi importada do arquivo CSV."
    },
    {
      "Command": "store",
      "Target": "${i}",
      "Value": "linhaInicial",
      "Description": "Salva a linha inicial para calcular o progresso da execu√ß√£o."
    },
    {
      "Command": "echo",
      "Target": "üßÆ Iniciando processamento pela linha ${i}, de um total de ${totalLinhas}.",
      "Value": "",
      "Description": "Informa no log o ponto de partida."
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "var d = new Date(); return d.getTime()",
      "Value": "tempoInicio",
      "Description": "Registra o momento inicial da execu√ß√£o."
    },
    {
      "Command": "store",
      "Target": "0",
      "Value": "ok",
      "Description": "Este comando gera a vari√°vel que armazenar√° a quantidade de execu√ß√µes bem-sucedidas da macro."
    },
    {
      "Command": "store",
      "Target": "0",
      "Value": "falha",
      "Description": "Este comando gera a vari√°vel que armazenar√° a quantidade de execu√ß√µes mal-sucedidas da macro. (Erros no sistema, n√£o no pr√≥prio UI.Vision)"
    },
    {
      "Command": "while_v2",
      "Target": "${i} <= ${totalLinhas}",
      "Value": "",
      "Description": "O comando \"while\" indica que a macro deve executar uma determinada a√ß√£o enquanto uma condi√ß√£o espec√≠fica n√£o for satisfeita. A a√ß√£o √© retomar o cadastro da pr√≥xima linha e a condi√ß√£o, aqui, √© que o valor da linha em execu√ß√£o tem que ser inferior ao total de linhas."
    },
    {
      "Command": "echo",
      "Target": "üîÅ Processando linha ${i}: ${usuarios[${i}][3]} (${usuarios[${i}][2]})",
      "Value": "blue",
      "Description": "Exibe no log qual usu√°rio est√° sendo cadastrado."
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "var atual = Number(${i}) - Number(${linhaInicial}); var total = Number(${totalLinhas}) - Number(${linhaInicial}) + 1; return Math.floor((atual / total) * 100);",
      "Value": "progresso",
      "Description": "Calcula o progresso relativo, de 0 a 100%."
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "var d = new Date(); return d.getTime()",
      "Value": "tempoAtual",
      "Description": "Registra o momento de in√≠cio de cada itera√ß√£o da macro."
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "return (${tempoAtual} - ${tempoInicio}) / (Number(${i}) + 1);",
      "Value": "tempoPorLinha",
      "Description": "Estima o tempo gasto em cada linha da macro."
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "var tempoEstimado = (Number(${totalLinhas}) - Number(${i})) * Number(${tempoPorLinha}); var min = Math.floor(tempoEstimado / 60000); var seg = Math.round((tempoEstimado % 60000) / 1000); var texto = '~ '; if (min > 0) texto += min + ' minuto' + (min != 1 ? 's' : ''); if (seg > 0 || min == 0) texto += (min > 0 ? ' ' : '') + seg + ' segundo' + (seg != 1 ? 's' : ''); return texto.trim();",
      "Value": "estimativa",
      "Description": "Calcula a estimativa de tempo restante em formato humanizado, considerando minutos e segundos com pluraliza√ß√£o."
    },
    {
      "Command": "if_v2",
      "Target": "${i} > 3",
      "Value": "",
      "Description": "Cria uma condicionante para exibir o tempo restante estimado apenas a partir da 4¬™ execu√ß√£o, quando a estimativa estar√° mais precisa."
    },
    {
      "Command": "echo",
      "Target": "üìà Progresso: ${progresso}% | ‚è≥ Tempo restante estimado: ${estimativa}",
      "Value": "blue",
      "Description": "Conforme condicional acima, exibe o progresso e o tempo restante estimado."
    },
    {
      "Command": "else",
      "Target": "",
      "Value": "",
      "Description": "Caso contr√°rio,"
    },
    {
      "Command": "echo",
      "Target": "üìà Progresso: ${progresso}%",
      "Value": "blue",
      "Description": "exibe (nas primeiras 3 linhas) apenas o progresso."
    },
    {
      "Command": "end",
      "Target": "",
      "Value": "",
      "Description": "encerra essa condicionante \"if\" (linha 16)."
    },
    {
      "Command": "clickAndWait",
      "Target": "id=btnNovo",
      "Value": "",
      "Targets": [
        "id=btnNovo",
        "xpath=//*[@id=\"btnNovo\"]",
        "xpath=//button[@id='btnNovo']",
        "xpath=//div/button",
        "css=#btnNovo"
      ],
      "Description": "√â o primeiro passo do cadastramento, o clique em \"Novo Usu√°rio\"."
    },
    {
      "Command": "select",
      "Target": "id=selOrgao",
      "Value": "label=${usuarios[${i}][1]}",
      "Description": "√â a sele√ß√£o do √≥rg√£o, com base na primeira coluna do arquivo CSV."
    },
    {
      "Command": "type",
      "Target": "id=txtSigla",
      "Value": "${usuarios[${i}][2]}",
      "Description": "√â a indica√ß√£o da sigla do √≥rg√£o (segunda coluna do CSV)."
    },
    {
      "Command": "type",
      "Target": "id=txtNome",
      "Value": "${usuarios[${i}][3]}",
      "Targets": [
        "id=txtNome",
        "name=txtNome",
        "xpath=//*[@id=\"txtNome\"]",
        "xpath=//input[@id='txtNome']",
        "xpath=//input[2]",
        "css=#txtNome"
      ],
      "Description": "√â o nome do usu√°rio, conforme a terceira coluna do CSV."
    },
    {
      "Command": "type",
      "Target": "id=txtNomeSocial",
      "Value": "${usuarios[${i}][4]}",
      "Targets": [
        "id=txtNomeSocial",
        "name=txtNomeSocial",
        "xpath=//*[@id=\"txtNomeSocial\"]",
        "xpath=//input[@id='txtNomeSocial']",
        "xpath=//input[3]",
        "css=#txtNomeSocial"
      ],
      "Description": "√â o nome social do usu√°rio, caso haja, nos termos da legisla√ß√£o vigente, com base na quarta coluna do CSV. (Aten√ß√£o: n√£o se trata de nome comercial ou nome art√≠stico. Nome social √© o nome pelo qual uma pessoa transg√™nero ou n√£o-bin√°ria prefere ser chamada, independentemente de seu nome registrado em documentos de identifica√ß√£o. √â um direito reconhecido em diversas normas brasileiras, como o Decreto n¬∫ 8.727/2016)."
    },
    {
      "Command": "type",
      "Target": "id=txtCpf",
      "Value": "${usuarios[${i}][5]}",
      "Targets": [
        "id=txtCpf",
        "name=txtCpf",
        "xpath=//*[@id=\"txtCpf\"]",
        "xpath=//input[@id='txtCpf']",
        "xpath=//input[5]",
        "css=#txtCpf"
      ],
      "Description": "√â o CPF do usu√°rio, conforme dado na quinta coluna do CSV."
    },
    {
      "Command": "type",
      "Target": "id=txtEmail",
      "Value": "${usuarios[${i}][6]}",
      "Targets": [
        "id=txtEmail",
        "name=txtEmail",
        "xpath=//*[@id=\"txtEmail\"]",
        "xpath=//input[@id='txtEmail']",
        "xpath=//input[6]",
        "css=#txtEmail"
      ],
      "Description": "√â o e-mail do usu√°rio, conforme a sexta coluna do CSV."
    },
    {
      "Command": "clickAndWait",
      "Target": "name=sbmCadastrarUsuario",
      "Value": "",
      "Targets": [
        "name=sbmCadastrarUsuario",
        "xpath=//*[@id=\"divInfraBarraComandosSuperior\"]/button",
        "xpath=//button[@name='sbmCadastrarUsuario']",
        "xpath=//div/button",
        "css=#divInfraBarraComandosSuperior > button:nth-child(1)"
      ],
      "Description": "√â o √∫ltimo passo do cadastramento, em que a macro simula o clique no bot√£o \"Salvar\"."
    },
    {
      "Command": "store",
      "Target": "true",
      "Value": "!statusOK",
      "Description": "Este comando √© necess√°rio para a valida√ß√£o do if posterior (linha 20)."
    },
    {
      "Command": "verifyElementPresent",
      "Target": "id=btnImprimir",
      "Value": "",
      "Targets": [
        "id=btnImprimir",
        "xpath=//*[@id=\"btnImprimir\"]",
        "xpath=//button[@id='btnImprimir']",
        "xpath=//button[2]",
        "css=#btnImprimir"
      ],
      "Description": "Esta etapa √© a confer√™ncia de que o SIP voltou √† tela anterior ap√≥s salvar."
    },
    {
      "Command": "if_v2",
      "Target": "${!statusOK} == true",
      "Value": "",
      "Description": "Este comando valida se a verifica√ß√£o anterior manteve o status da execu√ß√£o como bem sucedida. Se sim, mensagem de sucesso. Se n√£o, mensagem de erro."
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "return Number(${ok}) + 1;",
      "Value": "ok",
      "Description": "Primeiro, a macro acrescenta + 1 ao valor de \"ok\", ou seja, acrescenta uma execu√ß√£o bem-sucedida √† conta."
    },
    {
      "Command": "echo",
      "Target": "‚úÖ Usu√°rio ${usuarios[${i}][3]} (${usuarios[${i}][2]}) cadastrado com sucesso.",
      "Value": "green",
      "Description": "E por meio desta linha, exibe a mensagem de sucesso no log."
    },
    {
      "Command": "else",
      "Target": "",
      "Value": "",
      "Description": "caso contr√°rio..."
    },
    {
      "Command": "storeText",
      "Target": "id=divInfraMensagens",
      "Value": "mensagemErro",
      "Description": "a macro armazena a mensagem de erro exibida pelo SIP,"
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "return Number(${falha}) + 1;",
      "Value": "falha",
      "Description": "em seguida, acrescenta + 1 ao valor de \"falha\", ou seja, acrescenta uma execu√ß√£o malsucedida √† conta..."
    },
    {
      "Command": "echo",
      "Target": "‚ùå Falha ao cadastrar ${usuarios[${i}][3]} (${usuarios[${i}][2]}). Erro: \"${mensagemErro}\"",
      "Value": "red",
      "Description": "E, ent√£o, por meio desta linha, exibe a mensagem de falha no log."
    },
    {
      "Command": "clickAndWait",
      "Target": "id=btnCancelar",
      "Value": "",
      "Description": "Este clique no bot√£o \"Cancelar\" permite √† macro retornar √† tela anterior para retomar o cadastro."
    },
    {
      "Command": "end",
      "Target": "",
      "Value": "",
      "Description": "(N√£o √© o fim da macro. Este comando √© padr√£o para opera√ß√µes \"if-else\", como a utilizada aqui. Ele indica que se encerra uma bifurca√ß√£o. Este √© o \"end\" do \"if\" da linha 15 da macro.)"
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "return Number(${i}) + 1;",
      "Value": "i",
      "Description": "Esta linha acrescenta + 1 ao valor de \"i\", que corresponde √† linha a ser lida pela macro at√© chegar ao valor m√°ximo. Ou seja, este √© o comando que faz as itera√ß√µes se repetirem enquanto houver dados a cadastrar."
    },
    {
      "Command": "end",
      "Target": "",
      "Value": "",
      "Description": "(N√£o √© o fim da macro. Este comando √© padr√£o para opera√ß√µes \"if-else\", como a utilizada aqui. Ele indica que se encerra uma bifurca√ß√£o. Este √© o \"end\" do \"while\" da linha 7 da macro.)"
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "return Number(${ok}) + Number(${falha});",
      "Value": "total",
      "Description": "Esta fun√ß√£o compila os resultados das execu√ß√µes bem-sucedidas e das falhas."
    },
    {
      "Command": "echo",
      "Target": "üèÅ Carga finalizada: ${total} registros processados, sendo ${ok} com sucesso e ${falha} com erro.",
      "Value": "",
      "Description": "E, por fim, esta linha relata - ao final da execu√ß√£o da macro - quantos registros foram processados, quantos com sucesso e quantos com erro."
    }
  ]
}
